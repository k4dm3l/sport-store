paths:
  /auth/signin:
    post:
      tags:
        - Authentication
      summary: User authentication
      description: Authenticate user and get JWT Bearer token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthCredentials'
      responses:
        200:
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        400:
          description: Invalid request format
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Password must contain at least one lowercase letter, one uppercase letter, one digit, and one special character (!@#$%^&*)"
        401:
          description: Invalid credentials
        500:
          description: Internal server error

components:
  schemas:
    AuthCredentials:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "user@example.com"
        password:
          type: string
          format: password
          description: Must contain at least 8 characters, one uppercase, one lowercase, one number and one special character
          example: "SecurePass123!"
      required:
        - email
        - password